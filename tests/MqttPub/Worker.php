<?php
namespace Workerfy\Tests\MqttPub;

use Simps\MQTT\Client;
use Simps\MQTT\Config\ClientConfig;
use Swoole\Coroutine;

class Worker extends \Workerfy\AbstractProcess {

    public $client;

    public function run() {
        $host = '127.0.0.1';
        $port = 1883;
        $config = new ClientConfig();
        $config->setUserName('bingcool')
            ->setPassword('123456#@')
            ->setClientId(Client::genClientID())
            ->setKeepAlive(10)
            ->setDelay(3000) // 3s
            ->setMaxAttempts(5)
            ->setSwooleConfig([
                'open_mqtt_protocol' => true,
                'package_max_length' => 2 * 1024 * 1024
            ]);

        $this->client = $client = new Client($host, $port, $config);

        $response = $client->connect();
        while (!$response) {
            Coroutine\System::sleep(3);
            $client->connect();
        }
        $response = $client->publish('simps-mqtt/user001/update', '{"time":'. time() .'}', 1,0,1);
        var_dump($response);
        $start = time();

        while ( time() <= $start + 5) {
            try {
                $response = $client->publish('simps-mqtt/user001/update', '{"time":'. time() .'}', 1,0,1);
                var_dump($response);
                sleep(1);
            }catch (\Exception $e) {
                var_dump($e->getCode(), $e->getMessage());
            }
        }

    }

    public function onShutDown()
    {
        parent::onShutDown(); // TODO: Change the autogenerated stub
        //var_dump("shutdown--");
    }

//    public function __destruct()
//    {
//        var_dump("destruct");
//    }
}