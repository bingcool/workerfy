<?php
namespace Workerfy\Tests\Reboot;

class Worker extends \Workerfy\AbstractProcess {

    protected $sleep;

    // 外部cli方式传入--sleep=5
    public function init($sleep = 3)
    {
        var_dump($sleep);
        $this->sleep = $sleep;
    }

    public function run() {

        while (true)
        {
            try
            {
                if(time() - $this->getStartTime() > $this->sleep)
                {
                    var_dump("子进程开始 reboot start");
                    $this->reboot();
                }
                // 模拟处理业务
                sleep(1);
            }catch (\Throwable $e)
            {
                $this->onHandleException($e);
            }
        }

    }

    // 有时需要上报一下reboot的信息，主要是发生异常的时候或者业务上主动reboot，可以上报，方便随时了解信息
    public function afterReboot()
    {
        var_dump('reboot-count='.$this->getRebootCount());
    }

    public function onShutDown()
    {
        parent::onShutDown(); // TODO: Change the autogenerated stub
        var_dump("子进程 shutdown--".\Co::getCid());
    }

    public function __destruct()
    {
        var_dump("kkkkniiugiuguyvugyfuyf=".$this->getCoroutineId());
    }

//    public function __destruct()
//    {
//        var_dump("destruct");
//    }
}