<?php
namespace Workerfy\Tests\Status;

class Worker extends \Workerfy\AbstractProcess {

    public function init()
    {

        set_error_handler(function($errorNo) {
            var_dump('errorNo='.$errorNo);
        });
    }

    public function run() {

        // 模拟处理业务
        sleep(3);
        trigger_error('fffffff', E_USER_ERROR);
        //var_dump("子进程 开始 reboot start");
        if($this->getProcessWorkerId() == 0) {
            //$this->reboot(); //可以观察到子进程pid在变化
            ini_set('memory_limit','40M');
        }

        if($this->getProcessWorkerId() == 1) {
            sleep(10);
            //$this->reboot(); //可以观察到子进程pid在变化
        }

        if($this->getProcessWorkerId() == 2) {
            // 自身可以发起创建动态进程
            //$this->notifyMasterCreateDynamicProcess($this->getProcessName(),1);
        }

//        swoole_timer_tick(3000, function () {
//            var_dump('kkkkkk-cid='.\Co::getCid());
//        });

        while (true)
        {
            try {
                var_dump("nmmmmmmmm");
                throw new \Exception('vvvvvv');
            }catch (\Exception $e) {
                $this->onHandleException($e);
            }

            sleep(2);
        }

    }

    public function onShutDown()
    {
        parent::onShutDown(); // TODO: Change the autogenerated stub
        //var_dump("shutdown--");
    }

    public function onHandleException(\Throwable $throwable)
    {
        parent::onHandleException($throwable); // TODO: Change the autogenerated stub
    }

    public function __destruct()
    {
        var_dump("destruct");
    }
}